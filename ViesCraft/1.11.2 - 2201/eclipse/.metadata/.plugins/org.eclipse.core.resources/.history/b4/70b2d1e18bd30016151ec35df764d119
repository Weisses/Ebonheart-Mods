package com.viesis.viescraft.common.items.parts;

import java.util.List;

import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Items;
import net.minecraft.inventory.EntityEquipmentSlot;
import net.minecraft.item.EnumRarity;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.text.TextFormatting;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

import com.viesis.viescraft.ViesCraft;
import com.viesis.viescraft.common.entity.airshipcolors.EntityAirshipBaseVC;
import com.viesis.viescraft.common.entity.airshipcolors.EntityAirshipV1Core;
import com.viesis.viescraft.common.items.ItemHelper;
import com.viesis.viescraft.configs.ViesCraftConfig;
import com.viesis.viescraft.init.InitAchievementsVC;
import com.viesis.viescraft.init.InitItemsVC;

public class ItemFrame extends Item {
	
	private final EntityAirshipV1Core.Frame type;
	
	public ItemFrame(EntityAirshipV1Core.Frame typeIn) 
	{
		this.type = typeIn;
		ItemHelper.setItemName(this, "airship_frame_" + typeIn.getName().toString().toLowerCase().replaceAll("\\s+",""));
		this.setMaxStackSize(16);
		this.setCreativeTab(ViesCraft.tabViesCraftItems);
	}
	
	@SideOnly(Side.CLIENT)
    public void addInformation(ItemStack stack, EntityPlayer playerIn, List toolTip, boolean advanced) 
	{
		TextFormatting stringColor = TextFormatting.GOLD;
		
		if(type.ordinal() == 0
		|| type.ordinal() == 1)
		{
			stringColor = TextFormatting.GRAY;
		}
		if(type.ordinal() == 2
		|| type.ordinal() == 3
		|| type.ordinal() == 4)
		{
			stringColor = TextFormatting.GOLD;
		}
		if(type.ordinal() == 5
		|| type.ordinal() == 6
		|| type.ordinal() == 7)
		{
			stringColor = TextFormatting.DARK_AQUA;
		}
		
		
		toolTip.add(TextFormatting.WHITE + "[Shift + Left-Click]" + stringColor + " on an");
		toolTip.add(stringColor + "airship to change the frame.");
		//toolTip.add("");
		//toolTip.add(TextFormatting.GOLD + "Returns an empty bucket!");
	}
	
	public EnumRarity getRarity(ItemStack stack)
    {
		switch (type.ordinal())
        {
            case 0:
            	return EnumRarity.COMMON;
            case 1:
            	return EnumRarity.COMMON;
            case 2:
            	return EnumRarity.UNCOMMON;
            case 3:
            	return EnumRarity.UNCOMMON;
            case 4:
            	return EnumRarity.UNCOMMON;
            case 5:
            	return EnumRarity.RARE;
            case 6:
            	return EnumRarity.RARE;
            case 7:
            	return EnumRarity.RARE;
            default:
            	return EnumRarity.COMMON;
        }
    }
	
	@Override
	public boolean onLeftClickEntity(ItemStack stack, EntityPlayer player, Entity entity)
    {
		EntityAirshipBaseVC airship = (EntityAirshipBaseVC) entity;
		
		if (entity instanceof EntityAirshipBaseVC)
        {
			if(player.isSneaking())
			{
				if(airship.metaFrame != 0)
				{
					airship.metaFrame = EntityAirshipV1Core.Frame.WOOD0.ordinal();
					
					player.addStat(InitAchievementsVC.airship_create_color);
					
					if (!player.capabilities.isCreativeMode)
                    {
						stack.shrink(1);
						//player.setItemStackToSlot(EntityEquipmentSlot.MAINHAND, new ItemStack(Items.BUCKET));
						
                    }
					return true;
				}
				return true;
			}
			return true;
        }
        return false;
    }
	
	@Override
	public String getItemStackDisplayName(ItemStack stack)
    {
        return (type.getName() + " Airship Frame");
    }
}
